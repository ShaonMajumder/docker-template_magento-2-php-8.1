services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: magento-app
    container_name: magento-app
    restart: unless-stopped
    working_dir: /var/www/html/src
    volumes:
      # - ./src:/var/www/html/src
      # - ./src:/var/www/html/src:cached
      - ./src/app:/var/www/html/src/app
      - ./src/pub:/var/www/html/src/pub
      - ./src/composer.json:/var/www/html/src/composer.json
      - ./src/composer.lock:/var/www/html/src/composer.lock
      # -----
      - ./auth.json:/root/.composer/auth.json:ro
      - ./composer_cache:/root/.composer/cache
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini:ro
      # - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
    environment:
      - MAGENTO_HOST=${MAGENTO_HOST}
      - MAGENTO_DATABASE_HOST=${MAGENTO_DATABASE_HOST}
      - MAGENTO_DATABASE_USER=${DB_USERNAME}
      - MAGENTO_DATABASE_PASSWORD=${DB_PASSWORD}
      - MAGENTO_DATABASE_NAME=${DB_DATABASE}
      - MAGENTO_ADMIN_USER=${MAGENTO_ADMIN_USER}
      - MAGENTO_ADMIN_PASSWORD=${MAGENTO_ADMIN_PASSWORD}
      - MAGENTO_ADMIN_EMAIL=${MAGENTO_ADMIN_EMAIL}
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - COMPOSER_PROCESS_TIMEOUT=${COMPOSER_PROCESS_TIMEOUT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - magento-network
  nginx:
    image: nginx:alpine
    container_name: magento-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./src:/var/www/html/src
      - ./docker/nginx/magento.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - magento-network
  mysql:
    image: mysql:8.0
    container_name: magento-mysql
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - magento-network
  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: magento-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms${ELASTICSEARCH_MEMORY} -Xmx${ELASTICSEARCH_MEMORY}"
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - magento-network
  redis:
    image: redis:alpine
    container_name: magento-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - magento-network
networks:
  magento-network:
    driver: bridge
volumes:
  dbdata:
  esdata:
  composer_cache: